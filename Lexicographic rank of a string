
import java.util.*;
import java.io.*;
import java.lang.*;

class Driverclass
{
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t-- > 0)
        {
            String S = sc.next();
            System.out.println(new RankOfString().findRank(S));
        }
    }
}// } Driver Code Ends


//User function Template for Java

class RankOfString
{
    static long findRank(String str) 
    {
        Map<Character, Integer> map = new HashMap<>();
        for(int i = 0; i < str.length(); i++){
            if(map.containsKey(str.charAt(i))){
                return 0;
            }
            else{
                map.put(str.charAt(i), 1);
            }
        }
        int len = str.length(); 
        int mul = fact(len); 
        int rank = 1; 
        int countRight; 
  
        for (int i = 0; i < len; ++i) { 
            mul /= len - i; 
  
            // count number of chars smaller 
            // than str[i] from str[i+1] to 
            // str[len-1] 
            countRight = findSmallerInRight(str, i, len - 1); 
  
            rank += countRight * mul; 
        } 
  
        return rank%1000000007;
    }
    static int fact(int n) 
    { 
        return (n <= 1) ? 1 : n * fact(n - 1); 
    } 
  
    // A utility function to count smaller 
    // characters on right of arr[low] 
    static int findSmallerInRight(String str, int low, 
                                  int high) 
    { 
        int countRight = 0, i; 
  
        for (i = low + 1; i <= high; ++i) 
            if (str.charAt(i) < str.charAt(low)) 
                ++countRight; 
  
        return countRight; 
    }
}
