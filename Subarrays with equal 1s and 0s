//Initial Template for Java

import java.util.*;
import java.lang.*;
import java.lang.*;
import java.io.*;
class Driverclass
 {
	public static void main (String[] args) {
	   
	   Scanner in = new Scanner(System.in);
	   int t= in.nextInt();
	   while(t-->0){
	       
	       int n = in.nextInt();
	       int [] a = new int[n];
	       for(int i=0;i<n;i++) {
	           a[i] = in.nextInt();
	       }
	       System.out.println(new countsubArray().countSubarrWithEqualZeroAndOne(a, n));
	   }
	 }
}

// } Driver Code Ends


//User function Template for Java

class countsubArray
{
    // arr[] : the input array
    // N : size of the input array
    
    // return the number of subarrays with equal 0s and 1s
    static int countSubarrWithEqualZeroAndOne(int arr[], int n)
    {
        Map<Integer,Integer> um = new HashMap<>(); 
        int curr_sum = 0; 
      
        // Traverse original array and compute cumulative 
        // sum and increase count by 1 for this sum 
        // in 'um'. Adds '-1' when arr[i] == 0 
        for (int i = 0; i < n; i++) { 
            curr_sum += (arr[i] == 0) ? -1 : arr[i]; 
            um.put(curr_sum, um.get(curr_sum)==null?1:um.get(curr_sum)+1); 
        } 
      
        int count = 0; 
          
        // traverse the hash table 'um' 
        for (Map.Entry<Integer,Integer> itr : um.entrySet()) 
        { 
      
            // If there are more than one prefix subarrays 
            // with a particular sum 
            if (itr.getValue() > 1) 
                count += ((itr.getValue()* (itr.getValue()- 1)) / 2); 
        } 
      
        // add the subarrays starting from 1st element and 
        // have equal number of 1's and 0's 
        if (um.containsKey(0)) 
            count += um.get(0); 
      
        // required count of subarrays 
        return count; 
    }
}


