//Initial Template for Java

import java.util.Scanner;
import java.util.*;
import java.util.HashSet;

class Driverclass
{
    // Driver Code
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		
		while(t>0)
		{
			int n = sc.nextInt();
			int a[] = new int[n];
			
			for(int i=0; i<n; i++)
				a[i] = sc.nextInt();
		    
		    // Making object of GfG	
			Subseq g = new Subseq();
			
			System.out.println(g.findLongestConseqSubseq(a, n));
		
		t--;
		}
	}
}// } Driver Code Ends


//User function Template for Java

class Subseq
{   
	static int findLongestConseqSubseq(int arr[], int n)
	{
	    HashSet<Integer> S = new HashSet<Integer>(); 
        int ans = 0; 
  
        // Hash all the array elements 
        for (int i=0; i<n; ++i) 
            S.add(arr[i]); 
  
        // check each possible sequence from the start 
        // then update optimal length 
        for (int i=0; i<n; ++i) 
        { 
            // if current element is the starting 
            // element of a sequence 
            if (!S.contains(arr[i]-1)) 
            { 
                // Then check for next elements in the 
                // sequence 
                int j = arr[i]; 
                while (S.contains(j)) 
                    j++; 
  
                // update  optimal length if this length 
                // is more 
                if (ans<j-arr[i]) 
                    ans = j-arr[i]; 
            } 
        } 
        return ans;
	}
}
